//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_EventSink", "PROVIDERS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.Provider), "EVENT_SINK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.EventSinkSetting))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldExclCollection", "WI_TYPE_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.WorkItemTypeMappings), "FIELD_EXCLUSION_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ExcludedFields), true)]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldMapCollection1", "WI_TYPE_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.WorkItemTypeMappings), "FIELD_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.FieldMappings))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldMapCollection2", "MAPPINGS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.Mapping), "FIELD_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.FieldMappings))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ValueMapCollection2", "FIELD_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.TeamFoundation.Migration.EntityModel.FieldMappings), "VALUE_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ValueMappings))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionGroupConfigs3", "LINKING_SETTINGS", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.TeamFoundation.Migration.EntityModel.LinkingSetting), "SESSION_GROUP_CONFIGS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionGroupConfig))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ValueMapCollection1", "MAPPINGS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.Mapping), "VALUE_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ValueMappings), true)]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_WITypeMapCollection", "MAPPINGS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.Mapping), "WI_TYPE_MAP_COLLECTION", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.WorkItemTypeMappings))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_MigrationSourceConfigs", "MIGRATION_SOURCES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSource), "MIGRATION_SOURCE_CONFIGS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSourceConfig))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfigurations2", "MIGRATION_SOURCE_CONFIGS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSourceConfig), "SESSION_CONFIGURATIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionConfig))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfigurations3", "MIGRATION_SOURCE_CONFIGS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSourceConfig), "SESSION_CONFIGURATIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionConfig))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_MigrationSources1", "PROVIDERS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.Provider), "MIGRATION_SOURCES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSource))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_StoredCredentials", "MIGRATION_SOURCES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSource), "STORED_CREDENTIALS", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.TeamFoundation.Migration.EntityModel.StoredCredential))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfiguration5", "SESSION_GROUP_CONFIGS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionGroupConfig), "SESSION_CONFIGURATIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionConfig))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionGroupConfigs1", "SESSION_GROUPS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionGroup), "SESSION_GROUP_CONFIGS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionGroupConfig))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "EVENT_SINK_JUNC", "EVENT_SINK", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.EventSinkSetting), "SESSION_CONFIGURATIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionConfig))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FilterItemPair_to_SessionConfig", "SessionConfig", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionConfig), "FILTER_ITEM_PAIR", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.FilterItemPair))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions3", "SessionGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.SessionGroup), "RUNTIME_SESSIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.EMSession))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions1", "MigrationSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSource), "EMSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.EMSession))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions2", "MigrationSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.MigrationSource), "EMSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.EMSession))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRules2", "CONFLICT_CONFLICT_TYPES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictType), "CONFLICT_RESOLUTION_RULES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictResolutionRule))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_to_provider", "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.TeamFoundation.Migration.EntityModel.Provider), "CONFLICT_CONFLICT_TYPES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictType))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_action_to_provider", "Provider", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Microsoft.TeamFoundation.Migration.EntityModel.Provider), "CONFLICT_RESOLUTION_ACTIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictResolutionAction))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_ACTIONS", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictResolutionAction), "CONFLICT_RESOLUTION_RULES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictResolutionRule))]
[assembly: EdmRelationshipAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRules1", "CONFLICT_RULE_SCOPES", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictResolutionRuleScope), "CONFLICT_RESOLUTION_RULES", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Microsoft.TeamFoundation.Migration.EntityModel.ConfigConflictResolutionRule))]

#endregion

namespace Microsoft.TeamFoundation.Migration.EntityModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TfsMigrationConsolidatedDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TfsMigrationConsolidatedDBEntities object using the connection string found in the 'TfsMigrationConsolidatedDBEntities' section of the application configuration file.
        /// </summary>
        public TfsMigrationConsolidatedDBEntities() : base("name=TfsMigrationConsolidatedDBEntities", "TfsMigrationConsolidatedDBEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TfsMigrationConsolidatedDBEntities object.
        /// </summary>
        public TfsMigrationConsolidatedDBEntities(string connectionString) : base(connectionString, "TfsMigrationConsolidatedDBEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TfsMigrationConsolidatedDBEntities object.
        /// </summary>
        public TfsMigrationConsolidatedDBEntities(EntityConnection connection) : base(connection, "TfsMigrationConsolidatedDBEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventSinkSetting> EventSinkSettingSet
        {
            get
            {
                if ((_EventSinkSettingSet == null))
                {
                    _EventSinkSettingSet = base.CreateObjectSet<EventSinkSetting>("EventSinkSettingSet");
                }
                return _EventSinkSettingSet;
            }
        }
        private ObjectSet<EventSinkSetting> _EventSinkSettingSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExcludedFields> ExcludedFieldsSet
        {
            get
            {
                if ((_ExcludedFieldsSet == null))
                {
                    _ExcludedFieldsSet = base.CreateObjectSet<ExcludedFields>("ExcludedFieldsSet");
                }
                return _ExcludedFieldsSet;
            }
        }
        private ObjectSet<ExcludedFields> _ExcludedFieldsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldMappings> FieldMappingsSet
        {
            get
            {
                if ((_FieldMappingsSet == null))
                {
                    _FieldMappingsSet = base.CreateObjectSet<FieldMappings>("FieldMappingsSet");
                }
                return _FieldMappingsSet;
            }
        }
        private ObjectSet<FieldMappings> _FieldMappingsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LinkingSetting> LinkingSettingSet
        {
            get
            {
                if ((_LinkingSettingSet == null))
                {
                    _LinkingSettingSet = base.CreateObjectSet<LinkingSetting>("LinkingSettingSet");
                }
                return _LinkingSettingSet;
            }
        }
        private ObjectSet<LinkingSetting> _LinkingSettingSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Mapping> MappingSet
        {
            get
            {
                if ((_MappingSet == null))
                {
                    _MappingSet = base.CreateObjectSet<Mapping>("MappingSet");
                }
                return _MappingSet;
            }
        }
        private ObjectSet<Mapping> _MappingSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MigrationSourceConfig> MigrationSourceConfigSet
        {
            get
            {
                if ((_MigrationSourceConfigSet == null))
                {
                    _MigrationSourceConfigSet = base.CreateObjectSet<MigrationSourceConfig>("MigrationSourceConfigSet");
                }
                return _MigrationSourceConfigSet;
            }
        }
        private ObjectSet<MigrationSourceConfig> _MigrationSourceConfigSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MigrationSource> MigrationSourceSet
        {
            get
            {
                if ((_MigrationSourceSet == null))
                {
                    _MigrationSourceSet = base.CreateObjectSet<MigrationSource>("MigrationSourceSet");
                }
                return _MigrationSourceSet;
            }
        }
        private ObjectSet<MigrationSource> _MigrationSourceSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Provider> ProviderSet
        {
            get
            {
                if ((_ProviderSet == null))
                {
                    _ProviderSet = base.CreateObjectSet<Provider>("ProviderSet");
                }
                return _ProviderSet;
            }
        }
        private ObjectSet<Provider> _ProviderSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionConfig> SessionConfigSet
        {
            get
            {
                if ((_SessionConfigSet == null))
                {
                    _SessionConfigSet = base.CreateObjectSet<SessionConfig>("SessionConfigSet");
                }
                return _SessionConfigSet;
            }
        }
        private ObjectSet<SessionConfig> _SessionConfigSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionGroupConfig> SessionGroupConfigSet
        {
            get
            {
                if ((_SessionGroupConfigSet == null))
                {
                    _SessionGroupConfigSet = base.CreateObjectSet<SessionGroupConfig>("SessionGroupConfigSet");
                }
                return _SessionGroupConfigSet;
            }
        }
        private ObjectSet<SessionGroupConfig> _SessionGroupConfigSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SessionGroup> SessionGroupSet
        {
            get
            {
                if ((_SessionGroupSet == null))
                {
                    _SessionGroupSet = base.CreateObjectSet<SessionGroup>("SessionGroupSet");
                }
                return _SessionGroupSet;
            }
        }
        private ObjectSet<SessionGroup> _SessionGroupSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StoredCredential> StoredCredentialSet
        {
            get
            {
                if ((_StoredCredentialSet == null))
                {
                    _StoredCredentialSet = base.CreateObjectSet<StoredCredential>("StoredCredentialSet");
                }
                return _StoredCredentialSet;
            }
        }
        private ObjectSet<StoredCredential> _StoredCredentialSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ValueMappings> ValueMappingsSet
        {
            get
            {
                if ((_ValueMappingsSet == null))
                {
                    _ValueMappingsSet = base.CreateObjectSet<ValueMappings>("ValueMappingsSet");
                }
                return _ValueMappingsSet;
            }
        }
        private ObjectSet<ValueMappings> _ValueMappingsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkItemTypeMappings> WorkItemTypeMappingsSet
        {
            get
            {
                if ((_WorkItemTypeMappingsSet == null))
                {
                    _WorkItemTypeMappingsSet = base.CreateObjectSet<WorkItemTypeMappings>("WorkItemTypeMappingsSet");
                }
                return _WorkItemTypeMappingsSet;
            }
        }
        private ObjectSet<WorkItemTypeMappings> _WorkItemTypeMappingsSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FilterItemPair> FilterItemPairSet
        {
            get
            {
                if ((_FilterItemPairSet == null))
                {
                    _FilterItemPairSet = base.CreateObjectSet<FilterItemPair>("FilterItemPairSet");
                }
                return _FilterItemPairSet;
            }
        }
        private ObjectSet<FilterItemPair> _FilterItemPairSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EMSession> EMSessionSet
        {
            get
            {
                if ((_EMSessionSet == null))
                {
                    _EMSessionSet = base.CreateObjectSet<EMSession>("EMSessionSet");
                }
                return _EMSessionSet;
            }
        }
        private ObjectSet<EMSession> _EMSessionSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Addin> AddinSet
        {
            get
            {
                if ((_AddinSet == null))
                {
                    _AddinSet = base.CreateObjectSet<Addin>("AddinSet");
                }
                return _AddinSet;
            }
        }
        private ObjectSet<Addin> _AddinSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigConflictType> ConfigConflictTypeSet
        {
            get
            {
                if ((_ConfigConflictTypeSet == null))
                {
                    _ConfigConflictTypeSet = base.CreateObjectSet<ConfigConflictType>("ConfigConflictTypeSet");
                }
                return _ConfigConflictTypeSet;
            }
        }
        private ObjectSet<ConfigConflictType> _ConfigConflictTypeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigConflictResolutionAction> ConfigConflictResolutionActionSet
        {
            get
            {
                if ((_ConfigConflictResolutionActionSet == null))
                {
                    _ConfigConflictResolutionActionSet = base.CreateObjectSet<ConfigConflictResolutionAction>("ConfigConflictResolutionActionSet");
                }
                return _ConfigConflictResolutionActionSet;
            }
        }
        private ObjectSet<ConfigConflictResolutionAction> _ConfigConflictResolutionActionSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigConflictResolutionRule> ConfigConflictResolutionRuleSet
        {
            get
            {
                if ((_ConfigConflictResolutionRuleSet == null))
                {
                    _ConfigConflictResolutionRuleSet = base.CreateObjectSet<ConfigConflictResolutionRule>("ConfigConflictResolutionRuleSet");
                }
                return _ConfigConflictResolutionRuleSet;
            }
        }
        private ObjectSet<ConfigConflictResolutionRule> _ConfigConflictResolutionRuleSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfigConflictResolutionRuleScope> ConfigConflictResolutionRuleScopeSet
        {
            get
            {
                if ((_ConfigConflictResolutionRuleScopeSet == null))
                {
                    _ConfigConflictResolutionRuleScopeSet = base.CreateObjectSet<ConfigConflictResolutionRuleScope>("ConfigConflictResolutionRuleScopeSet");
                }
                return _ConfigConflictResolutionRuleScopeSet;
            }
        }
        private ObjectSet<ConfigConflictResolutionRuleScope> _ConfigConflictResolutionRuleScopeSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventSinkSettingSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventSinkSettingSet(EventSinkSetting eventSinkSetting)
        {
            base.AddObject("EventSinkSettingSet", eventSinkSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExcludedFieldsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExcludedFieldsSet(ExcludedFields excludedFields)
        {
            base.AddObject("ExcludedFieldsSet", excludedFields);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldMappingsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldMappingsSet(FieldMappings fieldMappings)
        {
            base.AddObject("FieldMappingsSet", fieldMappings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LinkingSettingSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLinkingSettingSet(LinkingSetting linkingSetting)
        {
            base.AddObject("LinkingSettingSet", linkingSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MappingSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMappingSet(Mapping mapping)
        {
            base.AddObject("MappingSet", mapping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MigrationSourceConfigSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMigrationSourceConfigSet(MigrationSourceConfig migrationSourceConfig)
        {
            base.AddObject("MigrationSourceConfigSet", migrationSourceConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MigrationSourceSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMigrationSourceSet(MigrationSource migrationSource)
        {
            base.AddObject("MigrationSourceSet", migrationSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProviderSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProviderSet(Provider provider)
        {
            base.AddObject("ProviderSet", provider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionConfigSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionConfigSet(SessionConfig sessionConfig)
        {
            base.AddObject("SessionConfigSet", sessionConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionGroupConfigSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionGroupConfigSet(SessionGroupConfig sessionGroupConfig)
        {
            base.AddObject("SessionGroupConfigSet", sessionGroupConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SessionGroupSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSessionGroupSet(SessionGroup sessionGroup)
        {
            base.AddObject("SessionGroupSet", sessionGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StoredCredentialSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStoredCredentialSet(StoredCredential storedCredential)
        {
            base.AddObject("StoredCredentialSet", storedCredential);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ValueMappingsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToValueMappingsSet(ValueMappings valueMappings)
        {
            base.AddObject("ValueMappingsSet", valueMappings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkItemTypeMappingsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkItemTypeMappingsSet(WorkItemTypeMappings workItemTypeMappings)
        {
            base.AddObject("WorkItemTypeMappingsSet", workItemTypeMappings);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FilterItemPairSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFilterItemPairSet(FilterItemPair filterItemPair)
        {
            base.AddObject("FilterItemPairSet", filterItemPair);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EMSessionSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEMSessionSet(EMSession eMSession)
        {
            base.AddObject("EMSessionSet", eMSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddinSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddinSet(Addin addin)
        {
            base.AddObject("AddinSet", addin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigConflictTypeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigConflictTypeSet(ConfigConflictType configConflictType)
        {
            base.AddObject("ConfigConflictTypeSet", configConflictType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigConflictResolutionActionSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigConflictResolutionActionSet(ConfigConflictResolutionAction configConflictResolutionAction)
        {
            base.AddObject("ConfigConflictResolutionActionSet", configConflictResolutionAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigConflictResolutionRuleSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigConflictResolutionRuleSet(ConfigConflictResolutionRule configConflictResolutionRule)
        {
            base.AddObject("ConfigConflictResolutionRuleSet", configConflictResolutionRule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfigConflictResolutionRuleScopeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigConflictResolutionRuleScopeSet(ConfigConflictResolutionRuleScope configConflictResolutionRuleScope)
        {
            base.AddObject("ConfigConflictResolutionRuleScopeSet", configConflictResolutionRuleScope);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="Addin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Addin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Addin object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="referenceName">Initial value of the ReferenceName property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        public static Addin CreateAddin(global::System.Int32 id, global::System.Guid referenceName, global::System.String friendlyName)
        {
            Addin addin = new Addin();
            addin.Id = id;
            addin.ReferenceName = referenceName;
            addin.FriendlyName = friendlyName;
            return addin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceName
        {
            get
            {
                return _ReferenceName;
            }
            set
            {
                OnReferenceNameChanging(value);
                ReportPropertyChanging("ReferenceName");
                _ReferenceName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceName");
                OnReferenceNameChanged();
            }
        }
        private global::System.Guid _ReferenceName;
        partial void OnReferenceNameChanging(global::System.Guid value);
        partial void OnReferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderVersion
        {
            get
            {
                return _ProviderVersion;
            }
            set
            {
                OnProviderVersionChanging(value);
                ReportPropertyChanging("ProviderVersion");
                _ProviderVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderVersion");
                OnProviderVersionChanged();
            }
        }
        private global::System.String _ProviderVersion;
        partial void OnProviderVersionChanging(global::System.String value);
        partial void OnProviderVersionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="ConfigConflictResolutionAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigConflictResolutionAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigConflictResolutionAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="referenceName">Initial value of the ReferenceName property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        public static ConfigConflictResolutionAction CreateConfigConflictResolutionAction(global::System.Int32 id, global::System.Guid referenceName, global::System.String friendlyName)
        {
            ConfigConflictResolutionAction configConflictResolutionAction = new ConfigConflictResolutionAction();
            configConflictResolutionAction.Id = id;
            configConflictResolutionAction.ReferenceName = referenceName;
            configConflictResolutionAction.FriendlyName = friendlyName;
            return configConflictResolutionAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceName
        {
            get
            {
                return _ReferenceName;
            }
            set
            {
                OnReferenceNameChanging(value);
                ReportPropertyChanging("ReferenceName");
                _ReferenceName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceName");
                OnReferenceNameChanged();
            }
        }
        private global::System.Guid _ReferenceName;
        partial void OnReferenceNameChanging(global::System.Guid value);
        partial void OnReferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_action_to_provider", "Provider")]
        public Provider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_action_to_provider", "Provider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_action_to_provider", "Provider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_action_to_provider", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_action_to_provider", "Provider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_RULES")]
        public EntityCollection<ConfigConflictResolutionRule> Rules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigConflictResolutionRule>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_RULES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigConflictResolutionRule>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_RULES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="ConfigConflictResolutionRule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigConflictResolutionRule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigConflictResolutionRule object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="referenceName">Initial value of the ReferenceName property.</param>
        /// <param name="scopeInfoUniqueId">Initial value of the ScopeInfoUniqueId property.</param>
        /// <param name="sourceInfoUniqueId">Initial value of the SourceInfoUniqueId property.</param>
        /// <param name="ruleData">Initial value of the RuleData property.</param>
        /// <param name="creationTime">Initial value of the CreationTime property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static ConfigConflictResolutionRule CreateConfigConflictResolutionRule(global::System.Int32 id, global::System.Guid referenceName, global::System.Guid scopeInfoUniqueId, global::System.Guid sourceInfoUniqueId, global::System.String ruleData, global::System.DateTime creationTime, global::System.Int32 status)
        {
            ConfigConflictResolutionRule configConflictResolutionRule = new ConfigConflictResolutionRule();
            configConflictResolutionRule.Id = id;
            configConflictResolutionRule.ReferenceName = referenceName;
            configConflictResolutionRule.ScopeInfoUniqueId = scopeInfoUniqueId;
            configConflictResolutionRule.SourceInfoUniqueId = sourceInfoUniqueId;
            configConflictResolutionRule.RuleData = ruleData;
            configConflictResolutionRule.CreationTime = creationTime;
            configConflictResolutionRule.Status = status;
            return configConflictResolutionRule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceName
        {
            get
            {
                return _ReferenceName;
            }
            set
            {
                OnReferenceNameChanging(value);
                ReportPropertyChanging("ReferenceName");
                _ReferenceName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceName");
                OnReferenceNameChanged();
            }
        }
        private global::System.Guid _ReferenceName;
        partial void OnReferenceNameChanging(global::System.Guid value);
        partial void OnReferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ScopeInfoUniqueId
        {
            get
            {
                return _ScopeInfoUniqueId;
            }
            set
            {
                OnScopeInfoUniqueIdChanging(value);
                ReportPropertyChanging("ScopeInfoUniqueId");
                _ScopeInfoUniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScopeInfoUniqueId");
                OnScopeInfoUniqueIdChanged();
            }
        }
        private global::System.Guid _ScopeInfoUniqueId;
        partial void OnScopeInfoUniqueIdChanging(global::System.Guid value);
        partial void OnScopeInfoUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SourceInfoUniqueId
        {
            get
            {
                return _SourceInfoUniqueId;
            }
            set
            {
                OnSourceInfoUniqueIdChanging(value);
                ReportPropertyChanging("SourceInfoUniqueId");
                _SourceInfoUniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceInfoUniqueId");
                OnSourceInfoUniqueIdChanged();
            }
        }
        private global::System.Guid _SourceInfoUniqueId;
        partial void OnSourceInfoUniqueIdChanging(global::System.Guid value);
        partial void OnSourceInfoUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RuleData
        {
            get
            {
                return _RuleData;
            }
            set
            {
                OnRuleDataChanging(value);
                ReportPropertyChanging("RuleData");
                _RuleData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RuleData");
                OnRuleDataChanged();
            }
        }
        private global::System.String _RuleData;
        partial void OnRuleDataChanging(global::System.String value);
        partial void OnRuleDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private global::System.DateTime _CreationTime;
        partial void OnCreationTimeChanging(global::System.DateTime value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeprecationTime
        {
            get
            {
                return _DeprecationTime;
            }
            set
            {
                OnDeprecationTimeChanging(value);
                ReportPropertyChanging("DeprecationTime");
                _DeprecationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeprecationTime");
                OnDeprecationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeprecationTime;
        partial void OnDeprecationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDeprecationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRules2", "CONFLICT_CONFLICT_TYPES")]
        public ConfigConflictType ConflictType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictType>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules2", "CONFLICT_CONFLICT_TYPES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictType>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules2", "CONFLICT_CONFLICT_TYPES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConfigConflictType> ConflictTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictType>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules2", "CONFLICT_CONFLICT_TYPES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConfigConflictType>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules2", "CONFLICT_CONFLICT_TYPES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_ACTIONS")]
        public ConfigConflictResolutionAction ResolutionAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictResolutionAction>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_ACTIONS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictResolutionAction>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_ACTIONS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConfigConflictResolutionAction> ResolutionActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictResolutionAction>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_ACTIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConfigConflictResolutionAction>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRule_to_ResolutionAction", "CONFLICT_RESOLUTION_ACTIONS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRules1", "CONFLICT_RULE_SCOPES")]
        public ConfigConflictResolutionRuleScope RuleScope
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictResolutionRuleScope>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules1", "CONFLICT_RULE_SCOPES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictResolutionRuleScope>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules1", "CONFLICT_RULE_SCOPES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConfigConflictResolutionRuleScope> RuleScopeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfigConflictResolutionRuleScope>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules1", "CONFLICT_RULE_SCOPES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConfigConflictResolutionRuleScope>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules1", "CONFLICT_RULE_SCOPES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="ConfigConflictResolutionRuleScope")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigConflictResolutionRuleScope : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigConflictResolutionRuleScope object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="scope">Initial value of the Scope property.</param>
        public static ConfigConflictResolutionRuleScope CreateConfigConflictResolutionRuleScope(global::System.Int32 id, global::System.String scope)
        {
            ConfigConflictResolutionRuleScope configConflictResolutionRuleScope = new ConfigConflictResolutionRuleScope();
            configConflictResolutionRuleScope.Id = id;
            configConflictResolutionRuleScope.Scope = scope;
            return configConflictResolutionRuleScope;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Scope
        {
            get
            {
                return _Scope;
            }
            set
            {
                OnScopeChanging(value);
                ReportPropertyChanging("Scope");
                _Scope = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Scope");
                OnScopeChanged();
            }
        }
        private global::System.String _Scope;
        partial void OnScopeChanging(global::System.String value);
        partial void OnScopeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRules1", "CONFLICT_RESOLUTION_RULES")]
        public EntityCollection<ConfigConflictResolutionRule> Rules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigConflictResolutionRule>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules1", "CONFLICT_RESOLUTION_RULES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigConflictResolutionRule>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules1", "CONFLICT_RESOLUTION_RULES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="ConfigConflictType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfigConflictType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfigConflictType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="referenceName">Initial value of the ReferenceName property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        public static ConfigConflictType CreateConfigConflictType(global::System.Int32 id, global::System.Guid referenceName, global::System.String friendlyName)
        {
            ConfigConflictType configConflictType = new ConfigConflictType();
            configConflictType.Id = id;
            configConflictType.ReferenceName = referenceName;
            configConflictType.FriendlyName = friendlyName;
            return configConflictType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceName
        {
            get
            {
                return _ReferenceName;
            }
            set
            {
                OnReferenceNameChanging(value);
                ReportPropertyChanging("ReferenceName");
                _ReferenceName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceName");
                OnReferenceNameChanged();
            }
        }
        private global::System.Guid _ReferenceName;
        partial void OnReferenceNameChanging(global::System.Guid value);
        partial void OnReferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionDoc
        {
            get
            {
                return _DescriptionDoc;
            }
            set
            {
                OnDescriptionDocChanging(value);
                ReportPropertyChanging("DescriptionDoc");
                _DescriptionDoc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionDoc");
                OnDescriptionDocChanged();
            }
        }
        private global::System.String _DescriptionDoc;
        partial void OnDescriptionDocChanging(global::System.String value);
        partial void OnDescriptionDocChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ResolutionRules2", "CONFLICT_RESOLUTION_RULES")]
        public EntityCollection<ConfigConflictResolutionRule> Rules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigConflictResolutionRule>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules2", "CONFLICT_RESOLUTION_RULES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigConflictResolutionRule>("Microsoft.TeamFounation.Migration.EntityModel.FK_ResolutionRules2", "CONFLICT_RESOLUTION_RULES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_to_provider", "Provider")]
        public Provider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_to_provider", "Provider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_to_provider", "Provider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_to_provider", "Provider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_to_provider", "Provider", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="EMSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EMSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EMSession object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sessionUniqueId">Initial value of the SessionUniqueId property.</param>
        public static EMSession CreateEMSession(global::System.Int32 id, global::System.Guid sessionUniqueId)
        {
            EMSession eMSession = new EMSession();
            eMSession.Id = id;
            eMSession.SessionUniqueId = sessionUniqueId;
            return eMSession;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionUniqueId
        {
            get
            {
                return _SessionUniqueId;
            }
            set
            {
                OnSessionUniqueIdChanging(value);
                ReportPropertyChanging("SessionUniqueId");
                _SessionUniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionUniqueId");
                OnSessionUniqueIdChanged();
            }
        }
        private global::System.Guid _SessionUniqueId;
        partial void OnSessionUniqueIdChanging(global::System.Guid value);
        partial void OnSessionUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeftHighWaterMarkLatest
        {
            get
            {
                return _LeftHighWaterMarkLatest;
            }
            set
            {
                OnLeftHighWaterMarkLatestChanging(value);
                ReportPropertyChanging("LeftHighWaterMarkLatest");
                _LeftHighWaterMarkLatest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeftHighWaterMarkLatest");
                OnLeftHighWaterMarkLatestChanged();
            }
        }
        private Nullable<global::System.Int32> _LeftHighWaterMarkLatest;
        partial void OnLeftHighWaterMarkLatestChanging(Nullable<global::System.Int32> value);
        partial void OnLeftHighWaterMarkLatestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RightHighWaterMarkLatest
        {
            get
            {
                return _RightHighWaterMarkLatest;
            }
            set
            {
                OnRightHighWaterMarkLatestChanging(value);
                ReportPropertyChanging("RightHighWaterMarkLatest");
                _RightHighWaterMarkLatest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightHighWaterMarkLatest");
                OnRightHighWaterMarkLatestChanged();
            }
        }
        private Nullable<global::System.Int32> _RightHighWaterMarkLatest;
        partial void OnRightHighWaterMarkLatestChanging(Nullable<global::System.Int32> value);
        partial void OnRightHighWaterMarkLatestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeftHighWaterMarkCurrent
        {
            get
            {
                return _LeftHighWaterMarkCurrent;
            }
            set
            {
                OnLeftHighWaterMarkCurrentChanging(value);
                ReportPropertyChanging("LeftHighWaterMarkCurrent");
                _LeftHighWaterMarkCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeftHighWaterMarkCurrent");
                OnLeftHighWaterMarkCurrentChanged();
            }
        }
        private Nullable<global::System.Int32> _LeftHighWaterMarkCurrent;
        partial void OnLeftHighWaterMarkCurrentChanging(Nullable<global::System.Int32> value);
        partial void OnLeftHighWaterMarkCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RightHighWaterMarkCurrent
        {
            get
            {
                return _RightHighWaterMarkCurrent;
            }
            set
            {
                OnRightHighWaterMarkCurrentChanging(value);
                ReportPropertyChanging("RightHighWaterMarkCurrent");
                _RightHighWaterMarkCurrent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightHighWaterMarkCurrent");
                OnRightHighWaterMarkCurrentChanged();
            }
        }
        private Nullable<global::System.Int32> _RightHighWaterMarkCurrent;
        partial void OnRightHighWaterMarkCurrentChanging(Nullable<global::System.Int32> value);
        partial void OnRightHighWaterMarkCurrentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExecOrderInSessionGroup
        {
            get
            {
                return _ExecOrderInSessionGroup;
            }
            set
            {
                OnExecOrderInSessionGroupChanging(value);
                ReportPropertyChanging("ExecOrderInSessionGroup");
                _ExecOrderInSessionGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecOrderInSessionGroup");
                OnExecOrderInSessionGroupChanged();
            }
        }
        private Nullable<global::System.Int32> _ExecOrderInSessionGroup;
        partial void OnExecOrderInSessionGroupChanging(Nullable<global::System.Int32> value);
        partial void OnExecOrderInSessionGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private Nullable<global::System.Int32> _State;
        partial void OnStateChanging(Nullable<global::System.Int32> value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrchestrationStatus
        {
            get
            {
                return _OrchestrationStatus;
            }
            set
            {
                OnOrchestrationStatusChanging(value);
                ReportPropertyChanging("OrchestrationStatus");
                _OrchestrationStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrchestrationStatus");
                OnOrchestrationStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _OrchestrationStatus;
        partial void OnOrchestrationStatusChanging(Nullable<global::System.Int32> value);
        partial void OnOrchestrationStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions3", "SessionGroup")]
        public SessionGroup SessionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions3", "SessionGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions3", "SessionGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SessionGroup> SessionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions3", "SessionGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions3", "SessionGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions1", "MigrationSource")]
        public MigrationSource LeftSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions1", "MigrationSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions1", "MigrationSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationSource> LeftSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions1", "MigrationSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions1", "MigrationSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions2", "MigrationSource")]
        public MigrationSource RightSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions2", "MigrationSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions2", "MigrationSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationSource> RightSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions2", "MigrationSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions2", "MigrationSource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="EventSinkSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventSinkSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventSinkSetting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        /// <param name="creationTime">Initial value of the CreationTime property.</param>
        public static EventSinkSetting CreateEventSinkSetting(global::System.Int32 id, global::System.String friendlyName, global::System.DateTime creationTime)
        {
            EventSinkSetting eventSinkSetting = new EventSinkSetting();
            eventSinkSetting.Id = id;
            eventSinkSetting.FriendlyName = friendlyName;
            eventSinkSetting.CreationTime = creationTime;
            return eventSinkSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private global::System.DateTime _CreationTime;
        partial void OnCreationTimeChanging(global::System.DateTime value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingXml
        {
            get
            {
                return _SettingXml;
            }
            set
            {
                OnSettingXmlChanging(value);
                ReportPropertyChanging("SettingXml");
                _SettingXml = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingXml");
                OnSettingXmlChanged();
            }
        }
        private global::System.String _SettingXml;
        partial void OnSettingXmlChanging(global::System.String value);
        partial void OnSettingXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingXmlSchema
        {
            get
            {
                return _SettingXmlSchema;
            }
            set
            {
                OnSettingXmlSchemaChanging(value);
                ReportPropertyChanging("SettingXmlSchema");
                _SettingXmlSchema = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingXmlSchema");
                OnSettingXmlSchemaChanged();
            }
        }
        private global::System.String _SettingXmlSchema;
        partial void OnSettingXmlSchemaChanging(global::System.String value);
        partial void OnSettingXmlSchemaChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_EventSink", "PROVIDERS")]
        public Provider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_EventSink", "PROVIDERS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_EventSink", "PROVIDERS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_EventSink", "PROVIDERS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_EventSink", "PROVIDERS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "EVENT_SINK_JUNC", "SESSION_CONFIGURATIONS")]
        public EntityCollection<SessionConfig> SessionConfig
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.EVENT_SINK_JUNC", "SESSION_CONFIGURATIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.EVENT_SINK_JUNC", "SESSION_CONFIGURATIONS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="ExcludedFields")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExcludedFields : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExcludedFields object.
        /// </summary>
        /// <param name="fieldName">Initial value of the FieldName property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        /// <param name="wITypeMapId">Initial value of the WITypeMapId property.</param>
        public static ExcludedFields CreateExcludedFields(global::System.String fieldName, global::System.Int32 direction, global::System.Int32 wITypeMapId)
        {
            ExcludedFields excludedFields = new ExcludedFields();
            excludedFields.FieldName = fieldName;
            excludedFields.Direction = direction;
            excludedFields.WITypeMapId = wITypeMapId;
            return excludedFields;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldName
        {
            get
            {
                return _FieldName;
            }
            set
            {
                if (_FieldName != value)
                {
                    OnFieldNameChanging(value);
                    ReportPropertyChanging("FieldName");
                    _FieldName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("FieldName");
                    OnFieldNameChanged();
                }
            }
        }
        private global::System.String _FieldName;
        partial void OnFieldNameChanging(global::System.String value);
        partial void OnFieldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                if (_Direction != value)
                {
                    OnDirectionChanging(value);
                    ReportPropertyChanging("Direction");
                    _Direction = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Direction");
                    OnDirectionChanged();
                }
            }
        }
        private global::System.Int32 _Direction;
        partial void OnDirectionChanging(global::System.Int32 value);
        partial void OnDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WITypeMapId
        {
            get
            {
                return _WITypeMapId;
            }
            set
            {
                if (_WITypeMapId != value)
                {
                    OnWITypeMapIdChanging(value);
                    ReportPropertyChanging("WITypeMapId");
                    _WITypeMapId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WITypeMapId");
                    OnWITypeMapIdChanged();
                }
            }
        }
        private global::System.Int32 _WITypeMapId;
        partial void OnWITypeMapIdChanging(global::System.Int32 value);
        partial void OnWITypeMapIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldExclCollection", "WI_TYPE_MAP_COLLECTION")]
        public WorkItemTypeMappings UsedInWorkItemTypeMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldExclCollection", "WI_TYPE_MAP_COLLECTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldExclCollection", "WI_TYPE_MAP_COLLECTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkItemTypeMappings> UsedInWorkItemTypeMappingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldExclCollection", "WI_TYPE_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldExclCollection", "WI_TYPE_MAP_COLLECTION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="FieldMappings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldMappings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldMappings object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="direction">Initial value of the Direction property.</param>
        public static FieldMappings CreateFieldMappings(global::System.Int32 id, global::System.Int32 direction)
        {
            FieldMappings fieldMappings = new FieldMappings();
            fieldMappings.Id = id;
            fieldMappings.Direction = direction;
            return fieldMappings;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.Int32 _Direction;
        partial void OnDirectionChanging(global::System.Int32 value);
        partial void OnDirectionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldMapCollection1", "WI_TYPE_MAP_COLLECTION")]
        public WorkItemTypeMappings WorkItemTypeMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection1", "WI_TYPE_MAP_COLLECTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection1", "WI_TYPE_MAP_COLLECTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkItemTypeMappings> WorkItemTypeMappingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection1", "WI_TYPE_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection1", "WI_TYPE_MAP_COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldMapCollection2", "MAPPINGS")]
        public Mapping FieldMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection2", "MAPPINGS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection2", "MAPPINGS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mapping> FieldMappingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection2", "MAPPINGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection2", "MAPPINGS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ValueMapCollection2", "VALUE_MAP_COLLECTION")]
        public EntityCollection<ValueMappings> ValueMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ValueMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection2", "VALUE_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ValueMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection2", "VALUE_MAP_COLLECTION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="FilterItemPair")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FilterItemPair : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FilterItemPair object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="neglect">Initial value of the Neglect property.</param>
        public static FilterItemPair CreateFilterItemPair(global::System.Int32 id, global::System.Boolean neglect)
        {
            FilterItemPair filterItemPair = new FilterItemPair();
            filterItemPair.Id = id;
            filterItemPair.Neglect = neglect;
            return filterItemPair;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter1
        {
            get
            {
                return _Filter1;
            }
            set
            {
                OnFilter1Changing(value);
                ReportPropertyChanging("Filter1");
                _Filter1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter1");
                OnFilter1Changed();
            }
        }
        private global::System.String _Filter1;
        partial void OnFilter1Changing(global::System.String value);
        partial void OnFilter1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter2
        {
            get
            {
                return _Filter2;
            }
            set
            {
                OnFilter2Changing(value);
                ReportPropertyChanging("Filter2");
                _Filter2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter2");
                OnFilter2Changed();
            }
        }
        private global::System.String _Filter2;
        partial void OnFilter2Changing(global::System.String value);
        partial void OnFilter2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Neglect
        {
            get
            {
                return _Neglect;
            }
            set
            {
                OnNeglectChanging(value);
                ReportPropertyChanging("Neglect");
                _Neglect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Neglect");
                OnNeglectChanged();
            }
        }
        private global::System.Boolean _Neglect;
        partial void OnNeglectChanging(global::System.Boolean value);
        partial void OnNeglectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Filter1MigrationSourceReferenceName
        {
            get
            {
                return _Filter1MigrationSourceReferenceName;
            }
            set
            {
                OnFilter1MigrationSourceReferenceNameChanging(value);
                ReportPropertyChanging("Filter1MigrationSourceReferenceName");
                _Filter1MigrationSourceReferenceName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Filter1MigrationSourceReferenceName");
                OnFilter1MigrationSourceReferenceNameChanged();
            }
        }
        private Nullable<global::System.Guid> _Filter1MigrationSourceReferenceName;
        partial void OnFilter1MigrationSourceReferenceNameChanging(Nullable<global::System.Guid> value);
        partial void OnFilter1MigrationSourceReferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> Filter2MigrationSourceReferenceName
        {
            get
            {
                return _Filter2MigrationSourceReferenceName;
            }
            set
            {
                OnFilter2MigrationSourceReferenceNameChanging(value);
                ReportPropertyChanging("Filter2MigrationSourceReferenceName");
                _Filter2MigrationSourceReferenceName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Filter2MigrationSourceReferenceName");
                OnFilter2MigrationSourceReferenceNameChanged();
            }
        }
        private Nullable<global::System.Guid> _Filter2MigrationSourceReferenceName;
        partial void OnFilter2MigrationSourceReferenceNameChanging(Nullable<global::System.Guid> value);
        partial void OnFilter2MigrationSourceReferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter1SnapshotPoint
        {
            get
            {
                return _Filter1SnapshotPoint;
            }
            set
            {
                OnFilter1SnapshotPointChanging(value);
                ReportPropertyChanging("Filter1SnapshotPoint");
                _Filter1SnapshotPoint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter1SnapshotPoint");
                OnFilter1SnapshotPointChanged();
            }
        }
        private global::System.String _Filter1SnapshotPoint;
        partial void OnFilter1SnapshotPointChanging(global::System.String value);
        partial void OnFilter1SnapshotPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter2SnapshotPoint
        {
            get
            {
                return _Filter2SnapshotPoint;
            }
            set
            {
                OnFilter2SnapshotPointChanging(value);
                ReportPropertyChanging("Filter2SnapshotPoint");
                _Filter2SnapshotPoint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter2SnapshotPoint");
                OnFilter2SnapshotPointChanged();
            }
        }
        private global::System.String _Filter2SnapshotPoint;
        partial void OnFilter2SnapshotPointChanging(global::System.String value);
        partial void OnFilter2SnapshotPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter1MergeScope
        {
            get
            {
                return _Filter1MergeScope;
            }
            set
            {
                OnFilter1MergeScopeChanging(value);
                ReportPropertyChanging("Filter1MergeScope");
                _Filter1MergeScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter1MergeScope");
                OnFilter1MergeScopeChanged();
            }
        }
        private global::System.String _Filter1MergeScope;
        partial void OnFilter1MergeScopeChanging(global::System.String value);
        partial void OnFilter1MergeScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter2MergeScope
        {
            get
            {
                return _Filter2MergeScope;
            }
            set
            {
                OnFilter2MergeScopeChanging(value);
                ReportPropertyChanging("Filter2MergeScope");
                _Filter2MergeScope = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter2MergeScope");
                OnFilter2MergeScopeChanged();
            }
        }
        private global::System.String _Filter2MergeScope;
        partial void OnFilter2MergeScopeChanging(global::System.String value);
        partial void OnFilter2MergeScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter1PeerSnapshotPoint
        {
            get
            {
                return _Filter1PeerSnapshotPoint;
            }
            set
            {
                OnFilter1PeerSnapshotPointChanging(value);
                ReportPropertyChanging("Filter1PeerSnapshotPoint");
                _Filter1PeerSnapshotPoint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter1PeerSnapshotPoint");
                OnFilter1PeerSnapshotPointChanged();
            }
        }
        private global::System.String _Filter1PeerSnapshotPoint;
        partial void OnFilter1PeerSnapshotPointChanging(global::System.String value);
        partial void OnFilter1PeerSnapshotPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filter2PeerSnapshotPoint
        {
            get
            {
                return _Filter2PeerSnapshotPoint;
            }
            set
            {
                OnFilter2PeerSnapshotPointChanging(value);
                ReportPropertyChanging("Filter2PeerSnapshotPoint");
                _Filter2PeerSnapshotPoint = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filter2PeerSnapshotPoint");
                OnFilter2PeerSnapshotPointChanged();
            }
        }
        private global::System.String _Filter2PeerSnapshotPoint;
        partial void OnFilter2PeerSnapshotPointChanging(global::System.String value);
        partial void OnFilter2PeerSnapshotPointChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FilterItemPair_to_SessionConfig", "SessionConfig")]
        public SessionConfig SessionConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_FilterItemPair_to_SessionConfig", "SessionConfig").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_FilterItemPair_to_SessionConfig", "SessionConfig").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SessionConfig> SessionConfigurationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_FilterItemPair_to_SessionConfig", "SessionConfig");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_FilterItemPair_to_SessionConfig", "SessionConfig", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="LinkingSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LinkingSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LinkingSetting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="settingXml">Initial value of the SettingXml property.</param>
        public static LinkingSetting CreateLinkingSetting(global::System.Int32 id, global::System.String settingXml)
        {
            LinkingSetting linkingSetting = new LinkingSetting();
            linkingSetting.Id = id;
            linkingSetting.SettingXml = settingXml;
            return linkingSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SettingXml
        {
            get
            {
                return _SettingXml;
            }
            set
            {
                OnSettingXmlChanging(value);
                ReportPropertyChanging("SettingXml");
                _SettingXml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SettingXml");
                OnSettingXmlChanged();
            }
        }
        private global::System.String _SettingXml;
        partial void OnSettingXmlChanging(global::System.String value);
        partial void OnSettingXmlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionGroupConfigs3", "SESSION_GROUP_CONFIGS")]
        public EntityCollection<SessionGroupConfig> SessionGroupConfig
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs3", "SESSION_GROUP_CONFIGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs3", "SESSION_GROUP_CONFIGS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="Mapping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mapping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Mapping object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="leftValue">Initial value of the LeftValue property.</param>
        /// <param name="rightValue">Initial value of the RightValue property.</param>
        public static Mapping CreateMapping(global::System.Int32 id, global::System.String leftValue, global::System.String rightValue)
        {
            Mapping mapping = new Mapping();
            mapping.Id = id;
            mapping.LeftValue = leftValue;
            mapping.RightValue = rightValue;
            return mapping;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeftValue
        {
            get
            {
                return _LeftValue;
            }
            set
            {
                OnLeftValueChanging(value);
                ReportPropertyChanging("LeftValue");
                _LeftValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LeftValue");
                OnLeftValueChanged();
            }
        }
        private global::System.String _LeftValue;
        partial void OnLeftValueChanging(global::System.String value);
        partial void OnLeftValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RightValue
        {
            get
            {
                return _RightValue;
            }
            set
            {
                OnRightValueChanging(value);
                ReportPropertyChanging("RightValue");
                _RightValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RightValue");
                OnRightValueChanged();
            }
        }
        private global::System.String _RightValue;
        partial void OnRightValueChanging(global::System.String value);
        partial void OnRightValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldMapCollection2", "FIELD_MAP_COLLECTION")]
        public EntityCollection<FieldMappings> UsedInFieldMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection2", "FIELD_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection2", "FIELD_MAP_COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ValueMapCollection1", "VALUE_MAP_COLLECTION")]
        public ValueMappings UsedInValueMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ValueMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "VALUE_MAP_COLLECTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ValueMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "VALUE_MAP_COLLECTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ValueMappings> UsedInValueMappingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ValueMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "VALUE_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ValueMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "VALUE_MAP_COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_WITypeMapCollection", "WI_TYPE_MAP_COLLECTION")]
        public EntityCollection<WorkItemTypeMappings> UsedInWorkItemTypeMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_WITypeMapCollection", "WI_TYPE_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkItemTypeMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_WITypeMapCollection", "WI_TYPE_MAP_COLLECTION", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="MigrationSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MigrationSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MigrationSource object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        /// <param name="serverIdentifier">Initial value of the ServerIdentifier property.</param>
        /// <param name="serverUrl">Initial value of the ServerUrl property.</param>
        /// <param name="sourceIdentifier">Initial value of the SourceIdentifier property.</param>
        /// <param name="uniqueId">Initial value of the UniqueId property.</param>
        public static MigrationSource CreateMigrationSource(global::System.Int32 id, global::System.String friendlyName, global::System.String serverIdentifier, global::System.String serverUrl, global::System.String sourceIdentifier, global::System.Guid uniqueId)
        {
            MigrationSource migrationSource = new MigrationSource();
            migrationSource.Id = id;
            migrationSource.FriendlyName = friendlyName;
            migrationSource.ServerIdentifier = serverIdentifier;
            migrationSource.ServerUrl = serverUrl;
            migrationSource.SourceIdentifier = sourceIdentifier;
            migrationSource.UniqueId = uniqueId;
            return migrationSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerIdentifier
        {
            get
            {
                return _ServerIdentifier;
            }
            set
            {
                OnServerIdentifierChanging(value);
                ReportPropertyChanging("ServerIdentifier");
                _ServerIdentifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerIdentifier");
                OnServerIdentifierChanged();
            }
        }
        private global::System.String _ServerIdentifier;
        partial void OnServerIdentifierChanging(global::System.String value);
        partial void OnServerIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerUrl
        {
            get
            {
                return _ServerUrl;
            }
            set
            {
                OnServerUrlChanging(value);
                ReportPropertyChanging("ServerUrl");
                _ServerUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerUrl");
                OnServerUrlChanged();
            }
        }
        private global::System.String _ServerUrl;
        partial void OnServerUrlChanging(global::System.String value);
        partial void OnServerUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SourceIdentifier
        {
            get
            {
                return _SourceIdentifier;
            }
            set
            {
                OnSourceIdentifierChanging(value);
                ReportPropertyChanging("SourceIdentifier");
                _SourceIdentifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SourceIdentifier");
                OnSourceIdentifierChanged();
            }
        }
        private global::System.String _SourceIdentifier;
        partial void OnSourceIdentifierChanging(global::System.String value);
        partial void OnSourceIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private global::System.Guid _UniqueId;
        partial void OnUniqueIdChanging(global::System.Guid value);
        partial void OnUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NativeId
        {
            get
            {
                return _NativeId;
            }
            set
            {
                OnNativeIdChanging(value);
                ReportPropertyChanging("NativeId");
                _NativeId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NativeId");
                OnNativeIdChanged();
            }
        }
        private global::System.String _NativeId;
        partial void OnNativeIdChanging(global::System.String value);
        partial void OnNativeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_MigrationSourceConfigs", "MIGRATION_SOURCE_CONFIGS")]
        public EntityCollection<MigrationSourceConfig> Configs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSourceConfigs", "MIGRATION_SOURCE_CONFIGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSourceConfigs", "MIGRATION_SOURCE_CONFIGS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_MigrationSources1", "PROVIDERS")]
        public Provider Provider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSources1", "PROVIDERS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSources1", "PROVIDERS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Provider> ProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSources1", "PROVIDERS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Provider>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSources1", "PROVIDERS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_StoredCredentials", "STORED_CREDENTIALS")]
        public StoredCredential StoredCredential
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoredCredential>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "STORED_CREDENTIALS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoredCredential>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "STORED_CREDENTIALS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StoredCredential> StoredCredentialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StoredCredential>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "STORED_CREDENTIALS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StoredCredential>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "STORED_CREDENTIALS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions1", "EMSession")]
        public EntityCollection<EMSession> AsLeftInSessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EMSession>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions1", "EMSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EMSession>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions1", "EMSession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions2", "EMSession")]
        public EntityCollection<EMSession> AsRightInSessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EMSession>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions2", "EMSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EMSession>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions2", "EMSession", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="MigrationSourceConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MigrationSourceConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MigrationSourceConfig object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationTime">Initial value of the CreationTime property.</param>
        public static MigrationSourceConfig CreateMigrationSourceConfig(global::System.Int32 id, global::System.DateTime creationTime)
        {
            MigrationSourceConfig migrationSourceConfig = new MigrationSourceConfig();
            migrationSourceConfig.Id = id;
            migrationSourceConfig.CreationTime = creationTime;
            return migrationSourceConfig;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private global::System.DateTime _CreationTime;
        partial void OnCreationTimeChanging(global::System.DateTime value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingXml
        {
            get
            {
                return _SettingXml;
            }
            set
            {
                OnSettingXmlChanging(value);
                ReportPropertyChanging("SettingXml");
                _SettingXml = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingXml");
                OnSettingXmlChanged();
            }
        }
        private global::System.String _SettingXml;
        partial void OnSettingXmlChanging(global::System.String value);
        partial void OnSettingXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingXmlSchema
        {
            get
            {
                return _SettingXmlSchema;
            }
            set
            {
                OnSettingXmlSchemaChanging(value);
                ReportPropertyChanging("SettingXmlSchema");
                _SettingXmlSchema = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingXmlSchema");
                OnSettingXmlSchemaChanged();
            }
        }
        private global::System.String _SettingXmlSchema;
        partial void OnSettingXmlSchemaChanging(global::System.String value);
        partial void OnSettingXmlSchemaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GeneralSettingXml
        {
            get
            {
                return _GeneralSettingXml;
            }
            set
            {
                OnGeneralSettingXmlChanging(value);
                ReportPropertyChanging("GeneralSettingXml");
                _GeneralSettingXml = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GeneralSettingXml");
                OnGeneralSettingXmlChanged();
            }
        }
        private global::System.String _GeneralSettingXml;
        partial void OnGeneralSettingXmlChanging(global::System.String value);
        partial void OnGeneralSettingXmlChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_MigrationSourceConfigs", "MIGRATION_SOURCES")]
        public MigrationSource MigrationSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSourceConfigs", "MIGRATION_SOURCES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSourceConfigs", "MIGRATION_SOURCES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationSource> MigrationSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSourceConfigs", "MIGRATION_SOURCES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSourceConfigs", "MIGRATION_SOURCES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfigurations2", "SESSION_CONFIGURATIONS")]
        public EntityCollection<SessionConfig> SessionConfigsAsLeft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations2", "SESSION_CONFIGURATIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations2", "SESSION_CONFIGURATIONS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfigurations3", "SESSION_CONFIGURATIONS")]
        public EntityCollection<SessionConfig> SessionConfigsAsRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations3", "SESSION_CONFIGURATIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations3", "SESSION_CONFIGURATIONS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="Provider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Provider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Provider object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        /// <param name="referenceName">Initial value of the ReferenceName property.</param>
        public static Provider CreateProvider(global::System.Int32 id, global::System.String friendlyName, global::System.Guid referenceName)
        {
            Provider provider = new Provider();
            provider.Id = id;
            provider.FriendlyName = friendlyName;
            provider.ReferenceName = referenceName;
            return provider;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReferenceName
        {
            get
            {
                return _ReferenceName;
            }
            set
            {
                OnReferenceNameChanging(value);
                ReportPropertyChanging("ReferenceName");
                _ReferenceName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferenceName");
                OnReferenceNameChanged();
            }
        }
        private global::System.Guid _ReferenceName;
        partial void OnReferenceNameChanging(global::System.Guid value);
        partial void OnReferenceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderVersion
        {
            get
            {
                return _ProviderVersion;
            }
            set
            {
                OnProviderVersionChanging(value);
                ReportPropertyChanging("ProviderVersion");
                _ProviderVersion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderVersion");
                OnProviderVersionChanged();
            }
        }
        private global::System.String _ProviderVersion;
        partial void OnProviderVersionChanging(global::System.String value);
        partial void OnProviderVersionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_EventSink", "EVENT_SINK")]
        public EntityCollection<EventSinkSetting> EventSinkSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventSinkSetting>("Microsoft.TeamFounation.Migration.EntityModel.FK_EventSink", "EVENT_SINK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventSinkSetting>("Microsoft.TeamFounation.Migration.EntityModel.FK_EventSink", "EVENT_SINK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_MigrationSources1", "MIGRATION_SOURCES")]
        public EntityCollection<MigrationSource> MigrationSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSources1", "MIGRATION_SOURCES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_MigrationSources1", "MIGRATION_SOURCES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_to_provider", "CONFLICT_CONFLICT_TYPES")]
        public EntityCollection<ConfigConflictType> CONFLICT_CONFLICT_TYPES
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigConflictType>("Microsoft.TeamFounation.Migration.EntityModel.FK_to_provider", "CONFLICT_CONFLICT_TYPES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigConflictType>("Microsoft.TeamFounation.Migration.EntityModel.FK_to_provider", "CONFLICT_CONFLICT_TYPES", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_action_to_provider", "CONFLICT_RESOLUTION_ACTIONS")]
        public EntityCollection<ConfigConflictResolutionAction> CONFLICT_RESOLUTION_ACTIONS
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfigConflictResolutionAction>("Microsoft.TeamFounation.Migration.EntityModel.FK_action_to_provider", "CONFLICT_RESOLUTION_ACTIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfigConflictResolutionAction>("Microsoft.TeamFounation.Migration.EntityModel.FK_action_to_provider", "CONFLICT_RESOLUTION_ACTIONS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="SessionConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionConfig object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sessionUniqueId">Initial value of the SessionUniqueId property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        /// <param name="creationTime">Initial value of the CreationTime property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static SessionConfig CreateSessionConfig(global::System.Int32 id, global::System.Guid sessionUniqueId, global::System.String friendlyName, global::System.DateTime creationTime, global::System.Int32 type)
        {
            SessionConfig sessionConfig = new SessionConfig();
            sessionConfig.Id = id;
            sessionConfig.SessionUniqueId = sessionUniqueId;
            sessionConfig.FriendlyName = friendlyName;
            sessionConfig.CreationTime = creationTime;
            sessionConfig.Type = type;
            return sessionConfig;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SessionUniqueId
        {
            get
            {
                return _SessionUniqueId;
            }
            set
            {
                OnSessionUniqueIdChanging(value);
                ReportPropertyChanging("SessionUniqueId");
                _SessionUniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionUniqueId");
                OnSessionUniqueIdChanged();
            }
        }
        private global::System.Guid _SessionUniqueId;
        partial void OnSessionUniqueIdChanging(global::System.Guid value);
        partial void OnSessionUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private global::System.DateTime _CreationTime;
        partial void OnCreationTimeChanging(global::System.DateTime value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeprecationTime
        {
            get
            {
                return _DeprecationTime;
            }
            set
            {
                OnDeprecationTimeChanging(value);
                ReportPropertyChanging("DeprecationTime");
                _DeprecationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeprecationTime");
                OnDeprecationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeprecationTime;
        partial void OnDeprecationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDeprecationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingXml
        {
            get
            {
                return _SettingXml;
            }
            set
            {
                OnSettingXmlChanging(value);
                ReportPropertyChanging("SettingXml");
                _SettingXml = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingXml");
                OnSettingXmlChanged();
            }
        }
        private global::System.String _SettingXml;
        partial void OnSettingXmlChanging(global::System.String value);
        partial void OnSettingXmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SettingXmlSchema
        {
            get
            {
                return _SettingXmlSchema;
            }
            set
            {
                OnSettingXmlSchemaChanging(value);
                ReportPropertyChanging("SettingXmlSchema");
                _SettingXmlSchema = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SettingXmlSchema");
                OnSettingXmlSchemaChanged();
            }
        }
        private global::System.String _SettingXmlSchema;
        partial void OnSettingXmlSchemaChanging(global::System.String value);
        partial void OnSettingXmlSchemaChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfigurations2", "MIGRATION_SOURCE_CONFIGS")]
        public MigrationSourceConfig LeftMigrationSourceConfig
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations2", "MIGRATION_SOURCE_CONFIGS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations2", "MIGRATION_SOURCE_CONFIGS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationSourceConfig> LeftMigrationSourceConfigReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations2", "MIGRATION_SOURCE_CONFIGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations2", "MIGRATION_SOURCE_CONFIGS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfigurations3", "MIGRATION_SOURCE_CONFIGS")]
        public MigrationSourceConfig RightMigrationSourceConfig
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations3", "MIGRATION_SOURCE_CONFIGS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations3", "MIGRATION_SOURCE_CONFIGS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationSourceConfig> RightMigrationSourceConfigReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations3", "MIGRATION_SOURCE_CONFIGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationSourceConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfigurations3", "MIGRATION_SOURCE_CONFIGS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfiguration5", "SESSION_GROUP_CONFIGS")]
        public SessionGroupConfig SessionGroupConfig
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfiguration5", "SESSION_GROUP_CONFIGS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfiguration5", "SESSION_GROUP_CONFIGS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SessionGroupConfig> SessionGroupConfigReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfiguration5", "SESSION_GROUP_CONFIGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfiguration5", "SESSION_GROUP_CONFIGS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "EVENT_SINK_JUNC", "EVENT_SINK")]
        public EntityCollection<EventSinkSetting> EventSinks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventSinkSetting>("Microsoft.TeamFounation.Migration.EntityModel.EVENT_SINK_JUNC", "EVENT_SINK");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventSinkSetting>("Microsoft.TeamFounation.Migration.EntityModel.EVENT_SINK_JUNC", "EVENT_SINK", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FilterItemPair_to_SessionConfig", "FILTER_ITEM_PAIR")]
        public EntityCollection<FilterItemPair> FilterItemPairs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FilterItemPair>("Microsoft.TeamFounation.Migration.EntityModel.FK_FilterItemPair_to_SessionConfig", "FILTER_ITEM_PAIR");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FilterItemPair>("Microsoft.TeamFounation.Migration.EntityModel.FK_FilterItemPair_to_SessionConfig", "FILTER_ITEM_PAIR", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="SessionGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="groupUniqueId">Initial value of the GroupUniqueId property.</param>
        /// <param name="friendlyName">Initial value of the FriendlyName property.</param>
        public static SessionGroup CreateSessionGroup(global::System.Int32 id, global::System.Guid groupUniqueId, global::System.String friendlyName)
        {
            SessionGroup sessionGroup = new SessionGroup();
            sessionGroup.Id = id;
            sessionGroup.GroupUniqueId = groupUniqueId;
            sessionGroup.FriendlyName = friendlyName;
            return sessionGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupUniqueId
        {
            get
            {
                return _GroupUniqueId;
            }
            set
            {
                OnGroupUniqueIdChanging(value);
                ReportPropertyChanging("GroupUniqueId");
                _GroupUniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupUniqueId");
                OnGroupUniqueIdChanged();
            }
        }
        private global::System.Guid _GroupUniqueId;
        partial void OnGroupUniqueIdChanging(global::System.Guid value);
        partial void OnGroupUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private Nullable<global::System.Int32> _State;
        partial void OnStateChanging(Nullable<global::System.Int32> value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrchestrationStatus
        {
            get
            {
                return _OrchestrationStatus;
            }
            set
            {
                OnOrchestrationStatusChanging(value);
                ReportPropertyChanging("OrchestrationStatus");
                _OrchestrationStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrchestrationStatus");
                OnOrchestrationStatusChanged();
            }
        }
        private Nullable<global::System.Int32> _OrchestrationStatus;
        partial void OnOrchestrationStatusChanging(Nullable<global::System.Int32> value);
        partial void OnOrchestrationStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionGroupConfigs1", "SESSION_GROUP_CONFIGS")]
        public EntityCollection<SessionGroupConfig> Configs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs1", "SESSION_GROUP_CONFIGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionGroupConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs1", "SESSION_GROUP_CONFIGS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_RT_Sessions3", "RUNTIME_SESSIONS")]
        public EntityCollection<EMSession> Sessions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EMSession>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions3", "RUNTIME_SESSIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EMSession>("Microsoft.TeamFounation.Migration.EntityModel.FK_RT_Sessions3", "RUNTIME_SESSIONS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="SessionGroupConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SessionGroupConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SessionGroupConfig object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="creationTime">Initial value of the CreationTime property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="uniqueId">Initial value of the UniqueId property.</param>
        /// <param name="workFlowType">Initial value of the WorkFlowType property.</param>
        public static SessionGroupConfig CreateSessionGroupConfig(global::System.Int32 id, global::System.DateTime creationTime, global::System.Int32 status, global::System.Guid uniqueId, global::System.Int32 workFlowType)
        {
            SessionGroupConfig sessionGroupConfig = new SessionGroupConfig();
            sessionGroupConfig.Id = id;
            sessionGroupConfig.CreationTime = creationTime;
            sessionGroupConfig.Status = status;
            sessionGroupConfig.UniqueId = uniqueId;
            sessionGroupConfig.WorkFlowType = workFlowType;
            return sessionGroupConfig;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationTime
        {
            get
            {
                return _CreationTime;
            }
            set
            {
                OnCreationTimeChanging(value);
                ReportPropertyChanging("CreationTime");
                _CreationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationTime");
                OnCreationTimeChanged();
            }
        }
        private global::System.DateTime _CreationTime;
        partial void OnCreationTimeChanging(global::System.DateTime value);
        partial void OnCreationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Creator
        {
            get
            {
                return _Creator;
            }
            set
            {
                OnCreatorChanging(value);
                ReportPropertyChanging("Creator");
                _Creator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Creator");
                OnCreatorChanged();
            }
        }
        private global::System.String _Creator;
        partial void OnCreatorChanging(global::System.String value);
        partial void OnCreatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeprecationTime
        {
            get
            {
                return _DeprecationTime;
            }
            set
            {
                OnDeprecationTimeChanging(value);
                ReportPropertyChanging("DeprecationTime");
                _DeprecationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeprecationTime");
                OnDeprecationTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeprecationTime;
        partial void OnDeprecationTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDeprecationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FriendlyName
        {
            get
            {
                return _FriendlyName;
            }
            set
            {
                OnFriendlyNameChanging(value);
                ReportPropertyChanging("FriendlyName");
                _FriendlyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FriendlyName");
                OnFriendlyNameChanged();
            }
        }
        private global::System.String _FriendlyName;
        partial void OnFriendlyNameChanging(global::System.String value);
        partial void OnFriendlyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UniqueId
        {
            get
            {
                return _UniqueId;
            }
            set
            {
                OnUniqueIdChanging(value);
                ReportPropertyChanging("UniqueId");
                _UniqueId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UniqueId");
                OnUniqueIdChanged();
            }
        }
        private global::System.Guid _UniqueId;
        partial void OnUniqueIdChanging(global::System.Guid value);
        partial void OnUniqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkFlowType
        {
            get
            {
                return _WorkFlowType;
            }
            set
            {
                OnWorkFlowTypeChanging(value);
                ReportPropertyChanging("WorkFlowType");
                _WorkFlowType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkFlowType");
                OnWorkFlowTypeChanged();
            }
        }
        private global::System.Int32 _WorkFlowType;
        partial void OnWorkFlowTypeChanging(global::System.Int32 value);
        partial void OnWorkFlowTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserIdentityMappingsConfig
        {
            get
            {
                return _UserIdentityMappingsConfig;
            }
            set
            {
                OnUserIdentityMappingsConfigChanging(value);
                ReportPropertyChanging("UserIdentityMappingsConfig");
                _UserIdentityMappingsConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserIdentityMappingsConfig");
                OnUserIdentityMappingsConfigChanged();
            }
        }
        private global::System.String _UserIdentityMappingsConfig;
        partial void OnUserIdentityMappingsConfigChanging(global::System.String value);
        partial void OnUserIdentityMappingsConfigChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ErrorManagementConfig
        {
            get
            {
                return _ErrorManagementConfig;
            }
            set
            {
                OnErrorManagementConfigChanging(value);
                ReportPropertyChanging("ErrorManagementConfig");
                _ErrorManagementConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ErrorManagementConfig");
                OnErrorManagementConfigChanged();
            }
        }
        private global::System.String _ErrorManagementConfig;
        partial void OnErrorManagementConfigChanging(global::System.String value);
        partial void OnErrorManagementConfigChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddinsConfig
        {
            get
            {
                return _AddinsConfig;
            }
            set
            {
                OnAddinsConfigChanging(value);
                ReportPropertyChanging("AddinsConfig");
                _AddinsConfig = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddinsConfig");
                OnAddinsConfigChanged();
            }
        }
        private global::System.String _AddinsConfig;
        partial void OnAddinsConfigChanging(global::System.String value);
        partial void OnAddinsConfigChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Settings
        {
            get
            {
                return _Settings;
            }
            set
            {
                OnSettingsChanging(value);
                ReportPropertyChanging("Settings");
                _Settings = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Settings");
                OnSettingsChanged();
            }
        }
        private global::System.String _Settings;
        partial void OnSettingsChanging(global::System.String value);
        partial void OnSettingsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionGroupConfigs3", "LINKING_SETTINGS")]
        public LinkingSetting LinkingSetting
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkingSetting>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs3", "LINKING_SETTINGS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkingSetting>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs3", "LINKING_SETTINGS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LinkingSetting> LinkingSettingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LinkingSetting>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs3", "LINKING_SETTINGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LinkingSetting>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs3", "LINKING_SETTINGS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionConfiguration5", "SESSION_CONFIGURATIONS")]
        public EntityCollection<SessionConfig> SessionConfigs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfiguration5", "SESSION_CONFIGURATIONS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SessionConfig>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionConfiguration5", "SESSION_CONFIGURATIONS", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_SessionGroupConfigs1", "SESSION_GROUPS")]
        public SessionGroup SessionGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs1", "SESSION_GROUPS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs1", "SESSION_GROUPS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SessionGroup> SessionGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs1", "SESSION_GROUPS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SessionGroup>("Microsoft.TeamFounation.Migration.EntityModel.FK_SessionGroupConfigs1", "SESSION_GROUPS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="StoredCredential")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StoredCredential : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StoredCredential object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="credentialString">Initial value of the CredentialString property.</param>
        public static StoredCredential CreateStoredCredential(global::System.Int32 id, global::System.String credentialString)
        {
            StoredCredential storedCredential = new StoredCredential();
            storedCredential.Id = id;
            storedCredential.CredentialString = credentialString;
            return storedCredential;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CredentialString
        {
            get
            {
                return _CredentialString;
            }
            set
            {
                OnCredentialStringChanging(value);
                ReportPropertyChanging("CredentialString");
                _CredentialString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CredentialString");
                OnCredentialStringChanged();
            }
        }
        private global::System.String _CredentialString;
        partial void OnCredentialStringChanging(global::System.String value);
        partial void OnCredentialStringChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_StoredCredentials", "MIGRATION_SOURCES")]
        public MigrationSource MigrationSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "MIGRATION_SOURCES").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "MIGRATION_SOURCES").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MigrationSource> MigrationSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "MIGRATION_SOURCES");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MigrationSource>("Microsoft.TeamFounation.Migration.EntityModel.FK_StoredCredentials", "MIGRATION_SOURCES", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="ValueMappings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ValueMappings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ValueMappings object.
        /// </summary>
        /// <param name="mappingId">Initial value of the MappingId property.</param>
        public static ValueMappings CreateValueMappings(global::System.Int32 mappingId)
        {
            ValueMappings valueMappings = new ValueMappings();
            valueMappings.MappingId = mappingId;
            return valueMappings;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MappingId
        {
            get
            {
                return _MappingId;
            }
            set
            {
                if (_MappingId != value)
                {
                    OnMappingIdChanging(value);
                    ReportPropertyChanging("MappingId");
                    _MappingId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MappingId");
                    OnMappingIdChanged();
                }
            }
        }
        private global::System.Int32 _MappingId;
        partial void OnMappingIdChanging(global::System.Int32 value);
        partial void OnMappingIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ValueMapCollection2", "FIELD_MAP_COLLECTION")]
        public FieldMappings UsedInFieldMappings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection2", "FIELD_MAP_COLLECTION").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection2", "FIELD_MAP_COLLECTION").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldMappings> UsedInFieldMappingsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection2", "FIELD_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection2", "FIELD_MAP_COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_ValueMapCollection1", "MAPPINGS")]
        public Mapping ValueMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "MAPPINGS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "MAPPINGS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mapping> ValueMappingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "MAPPINGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_ValueMapCollection1", "MAPPINGS", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Microsoft.TeamFounation.Migration.EntityModel", Name="WorkItemTypeMappings")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkItemTypeMappings : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkItemTypeMappings object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static WorkItemTypeMappings CreateWorkItemTypeMappings(global::System.Int32 id)
        {
            WorkItemTypeMappings workItemTypeMappings = new WorkItemTypeMappings();
            workItemTypeMappings.Id = id;
            return workItemTypeMappings;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldExclCollection", "FIELD_EXCLUSION_COLLECTION")]
        public EntityCollection<ExcludedFields> ExcludedFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExcludedFields>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldExclCollection", "FIELD_EXCLUSION_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExcludedFields>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldExclCollection", "FIELD_EXCLUSION_COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_FieldMapCollection1", "FIELD_MAP_COLLECTION")]
        public EntityCollection<FieldMappings> FieldMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection1", "FIELD_MAP_COLLECTION");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldMappings>("Microsoft.TeamFounation.Migration.EntityModel.FK_FieldMapCollection1", "FIELD_MAP_COLLECTION", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Microsoft.TeamFounation.Migration.EntityModel", "FK_WITypeMapCollection", "MAPPINGS")]
        public Mapping WorkItemTypeMapping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_WITypeMapCollection", "MAPPINGS").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_WITypeMapCollection", "MAPPINGS").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mapping> WorkItemTypeMappingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_WITypeMapCollection", "MAPPINGS");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mapping>("Microsoft.TeamFounation.Migration.EntityModel.FK_WITypeMapCollection", "MAPPINGS", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
